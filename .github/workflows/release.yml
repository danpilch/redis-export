name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with HashiCorp action
      uses: hashicorp/actions-go-build@main
      with:
        product_name: redis-export
        product_version: ${{ github.ref_name }}
        go_version: '1.24'
        os: ${{ matrix.os }}
        arch: ${{ matrix.arch }}
        instructions: |
          go build -o "$BIN_PATH" \
            -trimpath \
            -buildvcs=false \
            -ldflags="-s -w -X main.version=$PRODUCT_VERSION -X main.revision=$PRODUCT_REVISION -X main.revisionTime=$PRODUCT_REVISION_TIME" \
            .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: redis-export-${{ matrix.os }}-${{ matrix.arch }}
        path: out/*

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [ -z "$PREVIOUS_TAG" ]; then
          echo "## Changes" >> CHANGELOG.md
          echo "Initial release" >> CHANGELOG.md
        else
          echo "## Changes since $PREVIOUS_TAG" >> CHANGELOG.md
          git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
        fi
        
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        files: dist/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}