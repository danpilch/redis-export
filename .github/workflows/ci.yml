name: Build Test Release

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build with HashiCorp action
      uses: hashicorp/actions-go-build@main
      with:
        product_name: redis-export
        go_version: '1.24'
        os: ${{ matrix.os }}
        arch: ${{ matrix.arch }}
        instructions: |
          go build -o "$BIN_PATH" \
            -trimpath \
            -buildvcs=false \
            -ldflags="-s -w" \
            .

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
